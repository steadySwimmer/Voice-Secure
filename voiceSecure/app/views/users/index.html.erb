<p id="notice"><%= notice %></p>

<h1>Users</h1>

<!-- link bower package scripts -->
<!-- CDN -->
<script src="https://cdn.WebRTC-Experiment.com/RecordRTC.js"></script>
<script src="//cdn.webrtc-experiment.com/navigator.customGetUserMediaBar.js"></script>
<script src="https://cdn.webrtc-experiment.com/gumadapter.js"></script>


<script>
  var recordRTC;
  function successCallback(stream) {
      // RecordRTC usage goes here
      var options = {
        mimeType: 'audio/wav', // or video/mp4 or audio/ogg
        bitsPerSecond: 128000 // if this line is provided, skip above two
      };
      recordRTC = RecordRTC(stream, options);
  }

  function errorCallback(error) {
      // maybe another application is using the device
  }

  var mediaConstraints = { video: false, audio: true };

  navigator.mediaDevices.getUserMedia(mediaConstraints).then(successCallback).catch(errorCallback);

  function start() {
      recordRTC.startRecording();
  }


  function upload_two(audio_blob) {
    audio_blob.lastModifiedDate = new Date();
      audio_blob.name = 'my.wav';
      var my_file = audio_blob

      var fd = new FormData();
      fd.append('fname', 'my.wav');
      fd.append('data', my_file);
      $.ajax({
          type: 'POST',
          url: '/users',
          data: fd,
          processData: false,
          contentType: false
      }).done(function(data) {
             console.log(data);
      });
  }

  function upload(blobOrFile) {
    var formData = new FormData();
    formData.append('voice', blobOrFile, (new Date().getTime() + '.wav'));

    $.ajax({
        type: "POST",
        url: "/record",
        data: formData, 
        processData: false,
        contentType: false
    });
    // $.post('http://localhost:3000/users', {str: blobOrFile});
  }

  function readArray(audioBlob) {
    var reader = new FileReader();
    reader.addEventListener("loadend", function() {
      var answer = reader.result;
      // console.log(reader.result);
      return answer;
    });
    reader.readAsBinaryString(audioBlob);
  }

  function stop() {

    recordRTC.stopRecording(function(audioURL) {
      // recordRTC.save('pum.wav');
      // window.open(recordRTC.toURL());

      var audio_blob = recordRTC.blob;
      console.log(audio_blob.type);
      audio_blob.name = "pum.wav";

      // var blobBinary = readArray(audio_blob);

      upload(audio_blob);
    });

  };
  
</script>

<table>
  <thead>
    <tr>
      <th>Nickname</th>
      <th>Email</th>
      <!--<th colspan="3"></th>-->
    </tr>
  </thead>

<button id='btnStartRecording' onclick="start()">Record</button>
<button id='btnStopRecording' onclick="stop()">Stop</button>

  <tbody>
    <% @users.each do |user| %>
      <tr>
        <td><%= user.nickname %></td>
        <td><%= user.email %></td>
        <!--<td><%= user.friends %></td>-->
      </tr>
    <% end %>
  </tbody>
</table>

